import Student
import java.util.Scanner
val students = mutableListOf<Student>()
fun main() {
    val scanner=Scanner(System.`in`)
    var running:Boolean=true
    while(running){
        printMenu()
        when(scanner.nextInt()){
            1->addStudent()
            2->showStudentList()
            3->currentStudentStudy()
            9->running=false
            else->{
                println("–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç!")
            }
        }
    }
}
fun printMenu(){
    println("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞(1)")
    println("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤(2)")
    println("–ó–∞—Å—Ç–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ —É—á–∏—Ç—å—Å—è(3)")
    println("–í—ã—Ö–æ–¥(9)")
}
fun addStudent(){
    val scanner=Scanner(System.`in`)
    println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞—á–µ—Ç–∫–∏:")
    val number:Int=scanner.nextInt()
    println("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç:")
    val age:Int=scanner.nextInt()
    println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è:")
    val name:String=scanner.next()
    println("–í–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É:")
    val group:String=scanner.next()
    println("–°—Ç—É–¥–µ–Ω—Ç –±–∞–∫–∞–ª–∞–≤—Ä(1), –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç(2), –∞—Å–ø–∏—Ä–∞–Ω—Ç(3)?")
    when(scanner.nextInt()){
        1->{
            val student=Bachelor(number, age, name, group)
            students.add(student)
        }
        2->{
            val student=Master(number, age, name, group)
            students.add(student)
        }
        3->{
            val student=Graduate(number, age, name, group)
            students.add(student)
        }
    }
}
fun showStudentList(){
    if (students.isEmpty()) {
        println("üì≠ –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç")
        return
    }

    println("\n" + "=".repeat(80))
    println("–°–ü–ò–°–û–ö –°–¢–£–î–ï–ù–¢–û–í")
    println("=".repeat(80))
    println("| ‚Ññ   | –ò–º—è           | –í–æ–∑—Ä–∞—Å—Ç | –ì—Ä—É–ø–ø–∞    | –í–∏–¥ |")
    println("-".repeat(80))

    students.forEachIndexed { index, student ->
        println("| ${index + 1}   | ${student.name.padEnd(12)} | ${student.age.toString().padEnd(6)} | ${student.group.padEnd(8)} | ${student::class.simpleName} |")
    }

    println("=".repeat(80))
    println("–í—Å–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${students.size}")

}
fun currentStudentStudy(){
    val scanner=Scanner(System.`in`)
    println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞—á–µ—Ç–∫–∏:")
    val currentNumber:Int=scanner.nextInt()
    val currentStudent=students.find { it.number==currentNumber }
    if (currentStudent != null) {
        currentStudent.study()
    }
}